name: pull and process data from stocksmart website

on:
  schedule:
    - cron: "0 * * * *"

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install command line packages
        run: |
          sudo apt update
          sudo apt-get install libcurl4-openssl-dev
#          sudo apt-get install  libgdal-dev libcurl4-gnutls-dev libgit2-dev libudunits2-dev libharfbuzz-dev libfribidi-dev
        shell: bash

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.0'

      - name: Install packages
        run: |
          install.packages(c("dplyr", "httr", "here","readxl", "usethis","rmarkdown"))
        shell: Rscript {0}

      - name: Pull stocksmart data
        run: |
          options(timeout = 60 * 60 * 6)
          source(here::here("data-raw/query_stocksmart_api.R"))
          query_stocksmart_api()
        shell: Rscript {0}

      - name: Process stocksmart data
        run: |
          options(timeout = 60 * 60 * 6)
          source(here::here("data-raw/process_stocksmart_ts_data.R"))
          process_stocksmart_ts_data(exportFile=TRUE)
#         incorporate difference check (below) prior to writing to repo or save as RDS and
#         and write to repo later
        shell: Rscript {0}

      - name: render readme.rmd
        run: |
          options(timeout = 60 * 60 * 6)
          rmarkdown::render(here::here("README.Rmd"))
        shell: Rscript {0}

#       - name: Check for differences between data pull & existing
      # If same then need to exit without commit

      #- name: Find differences
      # Create text explaining differences and append to news.md and release notes

      - name: commit data files
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add data/\*.rda
          git add data-raw/datapull.txt
          git add data-raw/Assessment_Summary_Data.xlsx
          git add README.md
          git commit -m "automated commit from api yml"
          git push

#       - name: Autoincrement a new patch version
      #   run: |
      #     echo "NEW_PATCH_VERSION=$((${{ env.PATCH_VERSION }}+1))" >> $GITHUB_ENV
      # - name: Update patch version
      #   uses: hmanzur/actions-set-secret@v2.0.0
      #   with:
      #     name: 'PATCH_VERSION'
      #     value: ${{ env.NEW_PATCH_VERSION }}
      #     repository: ${{ github.repository }}
      #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
